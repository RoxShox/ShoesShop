/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/main.js":
/*!************************!*\
  !*** ./src/js/main.js ***!
  \************************/
/***/ (function() {

eval("// Burger-menu\r\nconst burger = document.querySelector('.burger__menu');\r\nconst btn = document.querySelector('.header__connect');\r\nconst menu = document.querySelector('.dropdown__menu');\r\nconst overlay = document.querySelector('.overlay');\r\n\r\nburger.addEventListener('click', () => {\r\n\tburger.classList.toggle('close');\r\n\tmenu.classList.toggle('show')\r\n\toverlay.classList.toggle('show-overlay')\r\n})\r\n\r\n\r\n\r\n\r\n$('.banner-slider__items').slick({\r\n\tinfinite: true,\r\n\tslidesToShow: 1,\r\n\tslidesToScroll: 1,\r\n\tdots: true,\r\n\tfade: true,\r\n\tarrows: false\r\n});\r\n\r\n\r\n$('.partners__slider-items').slick({\r\n\tinfinite: true,\r\n\tslidesToShow: 4,\r\n\tslidesToScroll: 1,\r\n\tnextArrow: document.querySelector('#my-arrow-next'),\r\n\tprevArrow: document.querySelector('#my-arrow-prev'),\r\n\tresponsive: [\r\n\t\t{\r\n\t\t  breakpoint: 850,\r\n\t\t  settings: {\r\n\t\t\tslidesToShow: 3,\r\n\t\t  }\r\n\t\t},\r\n\t\t{\r\n\t\t\tbreakpoint: 700,\r\n\t\t\tsettings: {\r\n\t\t\t  slidesToShow: 2,\r\n\t\t\t}\r\n\t\t  },\r\n\t\t  {\r\n\t\t\tbreakpoint: 500,\r\n\t\t\tsettings: {\r\n\t\t\t  slidesToShow: 1,\r\n\t\t\t}\r\n\t\t  },\r\n\t]\r\n});\r\n\r\n// Modal\r\n\r\nconst modalTrigger = document.querySelectorAll('.js-open-modal');\r\n// modal = document.querySelector('#modal-history');\r\n\r\nmodalTrigger.forEach(btn => {\r\n\tbtn.addEventListener('click', (e) => {\r\n\t\tconsole.log(e.target);\r\n\t\tlet modalTarget = e.target.dataset.modal;\r\n\t\tconsole.log(modalTarget);\r\n\t\tlet modal = document.getElementById(modalTarget);\r\n\t\tconsole.log(modal);\r\n\t\topenModal(modal);\r\n\t\tmodal.addEventListener('click', (e) => {\r\n\t\t\tif (e.target === modal || e.target.getAttribute('data-close') == \"\") {\r\n\t\t\t\tcloseModal(modal);\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n});\r\n\r\nfunction closeModal(modal) {\r\n\tmodal.classList.add('hide');\r\n\tmodal.classList.remove('show');\r\n\tdocument.body.style.overflow = '';\r\n}\r\n\r\nfunction openModal(modal) {\r\n\tmodal.classList.add('show');\r\n\tmodal.classList.remove('hide');\r\n\tdocument.body.style.overflow = 'hidden';\r\n\t// clearInterval(modalTimerId);\r\n}\r\n\r\ndocument.addEventListener('keydown', (e) => {\r\n\tif (e.code === \"Escape\" && modal.classList.contains('show')) {\r\n\t\tcloseModal(modal);\r\n\t}\r\n});\r\n\r\n\r\n// Validate\r\n\r\ntry {\r\n\tfunction validateForms(form) {\r\n\t\t$(form).validate({\r\n\t\t\trules: {\r\n\t\t\t\temail: {\r\n\t\t\t\t\trequired: true,\r\n\t\t\t\t\temail: true,\r\n\t\t\t\t},\r\n\t\t\t\tpassword: 'required',\r\n\t\t\t\trepeatpass: 'required',\r\n\t\t\t\tname: 'required',\r\n\t\t\t\tphone: 'required',\r\n\t\t\t},\r\n\t\t\tmessages: {\r\n\t\t\t\temail: {\r\n\t\t\t\t\trequired: \"Введите свой e-mail\",\r\n\t\t\t\t\temail: \"Неправильно введен адрес почты name@domain.com\"\r\n\t\t\t\t},\r\n\t\t\t\tname: {\r\n\t\t\t\t\trequired: \"Введите свое имя\",\r\n\t\t\t\t\tminlength: jQuery.validator.format(\"Введите {0} символов!\")\r\n\t\t\t\t},\r\n\t\t\t\tpassword: 'Введите пароль',\r\n\t\t\t\trepeatpass: 'Пароль не совпадает',\r\n\t\t\t\tphone: 'Введите свой телефон',\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tvalidateForms('#modal-small-form');\r\n\tvalidateForms('#modal-big-form');\r\n\t//   validateForms('#order form');\r\n\r\n\t$('input[name=phone]').mask(\"+7 (999) 999-99-99\");\r\n} catch (e) {\r\n\r\n}\r\n\r\n//  CURSOR\r\n\r\nfunction cursor() {\r\n    let customCursorBlock = document.querySelectorAll('.custom-cursor-js') || false;\r\n\r\n    if (customCursorBlock) {\r\n        let cursor = createCursorElement(),\r\n            cursorScale = document.querySelectorAll('.cursor-scale'),\r\n            mouseX = 0,\r\n            mouseY = 0;\r\n\r\n        gsap.to({}, 0.016, {\r\n            repeat: -1,\r\n\r\n            onRepeat: function () {\r\n                gsap.set(cursor, {\r\n                    css: {\r\n                        left: mouseX,\r\n                        top: mouseY\r\n                    }\r\n                })\r\n            }\r\n        });\r\n\r\n        customCursorBlock.forEach(block => {\r\n            block.addEventListener('mousemove', function (e) {\r\n                cursor.classList.add('visible');\r\n                mouseX = e.clientX;\r\n                mouseY = e.clientY;\r\n            });\r\n\r\n            block.addEventListener('mouseleave', function (e) {\r\n                cursor.classList.remove('visible');\r\n            });\r\n        })\r\n\r\n        cursorScale.forEach(item => {\r\n            item.addEventListener('mouseleave', function () {\r\n                cursor.classList.remove('grow');\r\n            });\r\n\r\n            item.addEventListener('mousemove', function () {\r\n                cursor.classList.add('grow');\r\n            });\r\n        });\r\n    }\r\n\r\n    function createCursorElement() {\r\n        let cursor = document.createElement(\"div\");\r\n        cursor.classList.add(\"cursor\");\r\n        document.querySelector('main').appendChild(cursor);\r\n\r\n        return cursor;\r\n    }\r\n\r\n}\r\n\r\ncursor();\r\n\r\n\r\n//  BORDER-btn\r\n\r\nconst roundedBtn = document.querySelectorAll(\".js-rounded-btn\");\r\n\r\nconst initAnimation = (btn) => {\r\n    const hit = btn.querySelector(\".rounded-btn__hit\");\r\n    const border = btn.querySelector(\".rounded-btn__border\");\r\n    const text = btn.querySelector(\".rounded-btn__text\");\r\n\r\n    let initialBorderRadius = getComputedStyle(border).getPropertyValue(\"border-top-left-radius\");\r\n\r\n    let hitWidth = hit.offsetWidth;\r\n    let width = border.offsetHeight;\r\n    let widthDiff = Math.abs((btn.offsetWidth - hitWidth) / 2);\r\n    let center = hitWidth / 2;\r\n\r\n    hit.addEventListener(\"mousemove\", (e) => {\r\n\r\n        let offset = e.target.getBoundingClientRect();\r\n        let x = e.pageX - offset.left;\r\n\r\n        let moveTextX = ((x - center) / 10);\r\n\r\n        let moveX;\r\n        const sideOffset = Math.abs(((x - center) / 10) * 1.4);\r\n        const isRightSide = x > center;\r\n\r\n        moveX = isRightSide\r\n            ? x - (width / 2 + widthDiff + sideOffset)\r\n            : x - (width / 2 + widthDiff - sideOffset);\r\n\r\n\r\n        gsap.to(border, { width: width + \"px\", x: moveX + \"px\", borderRadius: \"50%\", duration: 0.3 });\r\n        gsap.to(text, { x: moveTextX + \"px\" });\r\n    });\r\n\r\n    hit.addEventListener(\"mouseleave\", () => {\r\n        gsap.to(border, { width: \"100%\", x: 0, borderRadius: initialBorderRadius });\r\n        gsap.to(text, { x: 0 });\r\n    });\r\n};\r\n\r\nArray.from(roundedBtn).forEach(item => {\r\n    initAnimation(item);\r\n});\n\n//# sourceURL=webpack://gulp_build/./src/js/main.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/main.js"]();
/******/ 	
/******/ })()
;